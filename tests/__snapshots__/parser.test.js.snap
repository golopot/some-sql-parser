// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`
SELECT
  a
 1`] = `
Object {
  "expressions": Array [
    "a",
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`ALTER TABLE table_name DROP COLUMN a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name DROP FOREIGN KEY fk_symbol 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name DROP INDEX index_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name DROP KEY index_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name DROP PRIMARY KEY 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name DROP a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME AS new_table_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME COLUMN old_column TO new_column 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME INDEX old_key TO new_key 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME KEY old_key TO new_key 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME TO new_table_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE table_name RENAME new_table_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword ADD.",
  "type": undefined,
}
`;

exports[`ALTER TABLE tbl_name ADD COLUMN a int 1`] = `
Object {
  "after": undefined,
  "columnName": "a",
  "columnType": Object {
    "arguments": undefined,
    "name": "INT",
    "type": "DataType",
  },
  "first": false,
  "table": "tbl_name",
  "type": "AlterTableStatement",
  "variant": "ADD COLUMN",
}
`;

exports[`ALTER TABLE tbl_name ADD a int 1`] = `
Object {
  "after": undefined,
  "columnName": "a",
  "columnType": Object {
    "arguments": undefined,
    "name": "INT",
    "type": "DataType",
  },
  "first": false,
  "table": "tbl_name",
  "type": "AlterTableStatement",
  "variant": "ADD COLUMN",
}
`;

exports[`ALTER TABLE tbl_name ADD a int AFTER b 1`] = `
Object {
  "after": "b",
  "columnName": "a",
  "columnType": Object {
    "arguments": undefined,
    "name": "INT",
    "type": "DataType",
  },
  "first": false,
  "table": "tbl_name",
  "type": "AlterTableStatement",
  "variant": "ADD COLUMN",
}
`;

exports[`ALTER TABLE tbl_name ADD a int FIRST 1`] = `
Object {
  "after": undefined,
  "columnName": "a",
  "columnType": Object {
    "arguments": undefined,
    "name": "INT",
    "type": "DataType",
  },
  "first": true,
  "table": "tbl_name",
  "type": "AlterTableStatement",
  "variant": "ADD COLUMN",
}
`;

exports[`ALTER TABLE tbl_name ADD a int, ADD b int 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`CREATE DATABASE db_name 1`] = `
Object {
  "databaseName": "db_name",
  "type": "CreateDatabaseStatement",
}
`;

exports[`CREATE DATABASE db_name 2`] = `
Object {
  "databaseName": "db_name",
  "type": "CreateDatabaseStatement",
}
`;

exports[`CREATE INDEX idx ON t1 (col1, col2) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`CREATE TABLE "Foo" ( a int ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo ( a int ) 1`] = `
Object {
  "definitions": Array [
    Object {
      "columnName": "a",
      "columnType": Object {
        "arguments": undefined,
        "name": "INT",
        "type": "DataType",
      },
      "type": "CreateDefinition",
    },
  ],
  "tableName": "Foo",
  "type": "CreateTableStatement",
}
`;

exports[`CREATE TABLE Foo ( a int primary key ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo ( a int, b varchar(255) ) 1`] = `
Object {
  "definitions": Array [
    Object {
      "columnName": "a",
      "columnType": Object {
        "arguments": undefined,
        "name": "INT",
        "type": "DataType",
      },
      "type": "CreateDefinition",
    },
    Object {
      "columnName": "b",
      "columnType": Object {
        "arguments": Array [
          "255",
        ],
        "name": "VARCHAR",
        "type": "DataType",
      },
      "type": "CreateDefinition",
    },
  ],
  "tableName": "Foo",
  "type": "CreateTableStatement",
}
`;

exports[`CREATE TABLE Foo ( key (id) ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo () 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`DELETE FROM table_name WHERE a = 5 ORDER BY a LIMIT count 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`DROP DATABASE IF EXISTS db_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`DROP DATABASE db_name 1`] = `
Object {
  "databaseName": "db_name",
  "type": "DropDatabaseStatement",
}
`;

exports[`DROP INDEX index_name ON tbl_name 1`] = `
Object {
  "indexName": "index_name",
  "tableName": "tbl_name",
  "type": "DropIndexStatement",
}
`;

exports[`DROP TABLE IF EXISTS table_name 1`] = `
Object {
  "hasIfExists": true,
  "tableName": "table_name",
  "type": "DropTableStatement",
}
`;

exports[`DROP TABLE table_name 1`] = `
Object {
  "hasIfExists": false,
  "tableName": "table_name",
  "type": "DropTableStatement",
}
`;

exports[`INSERT INTO foo (a, b) SELECT c, d FROM bar; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword VALUES.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo (a, b) VALUES (1, 2), (3, 4); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword VALUES.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo (a, b) VALUES (15, a * 2); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword VALUES.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo VALUE (1), (2); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting keyword VALUES.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo VALUES (1, 2) 1`] = `
Object {
  "table": "foo",
  "type": "InsertStatement",
  "values": Object {
    "expressions": Array [
      Object {
        "expressions": Array [
          "1",
          "2",
        ],
        "type": "TupleExpression",
      },
    ],
    "type": "ValuesClause",
  },
}
`;

exports[`INSERT foo VALUES (1, 2) 1`] = `
Object {
  "table": "foo",
  "type": "InsertStatement",
  "values": Object {
    "expressions": Array [
      Object {
        "expressions": Array [
          "1",
          "2",
        ],
        "type": "TupleExpression",
      },
    ],
    "type": "ValuesClause",
  },
}
`;

exports[`SELECT "1", '1', \`1\` 1`] = `
Object {
  "expressions": Array [
    Object {
      "type": "LiteralToken",
      "value": "1",
    },
    Object {
      "type": "LiteralToken",
      "value": "1",
    },
    Object {
      "type": "LiteralToken",
      "value": "1",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT (SELECT 1) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax",
  "type": undefined,
}
`;

exports[`SELECT (a) 1`] = `
Object {
  "expressions": Array [
    Object {
      "expression": "a",
      "type": "ParenthesisExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT (f)() 1`] = `
Object {
  "expressions": Array [
    Object {
      "arguments": Array [],
      "callee": Object {
        "expression": "f",
        "type": "ParenthesisExpression",
      },
      "type": "CallExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT * FROM "foo" 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`SELECT * FROM (SELECT * FROM foo) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Cannot read property 'length' of undefined",
  "type": undefined,
}
`;

exports[`SELECT * FROM \`foo\`.\`goo\` 1`] = `
Object {
  "expressions": Array [
    Object {
      "type": "WildcardExpression",
    },
  ],
  "from": Object {
    "table": Object {
      "left": Object {
        "type": "LiteralToken",
        "value": "foo",
      },
      "right": Object {
        "type": "LiteralToken",
        "value": "goo",
      },
      "type": "MemberExpression",
    },
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT * FROM f.g.h 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo 1`] = `
Object {
  "expressions": Array [
    Object {
      "type": "WildcardExpression",
    },
  ],
  "from": Object {
    "table": "foo",
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT * FROM foo GROUP BY a HAVING b=5 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo LEFT JOIN goo ON foo.a = goo.a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo WHERE a = (SELECT max(b) FROM foo) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo WHERE a = (SELECT max(b) FROM foo) 2`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo f LEFT JOIN goo g ON f.a = g.a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo, goo 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo.goo 1`] = `
Object {
  "expressions": Array [
    Object {
      "type": "WildcardExpression",
    },
  ],
  "from": Object {
    "table": Object {
      "left": "foo",
      "right": "goo",
      "type": "MemberExpression",
    },
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT + 1 - 2 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": Object {
        "operand": "1",
        "operator": "+",
        "type": "UnaryExpression",
      },
      "operator": "-",
      "right": "2",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT +-!~1 1`] = `
Object {
  "expressions": Array [
    Object {
      "operand": Object {
        "operand": Object {
          "operand": Object {
            "operand": "1",
            "operator": "~",
            "type": "UnaryExpression",
          },
          "operator": "!",
          "type": "UnaryExpression",
        },
        "operator": "-",
        "type": "UnaryExpression",
      },
      "operator": "+",
      "type": "UnaryExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 1 SELECT 2 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 1 UNION SELECT 2 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 1 UPDATE foo SET a = 5 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 1; SELECT 2; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 2 * (a % b) 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "2",
      "operator": "*",
      "right": Object {
        "expression": Object {
          "left": "a",
          "operator": "%",
          "right": "b",
        },
        "type": "ParenthesisExpression",
      },
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a "aa" 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT a + b * c / d 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": Object {
        "left": "a",
        "operator": "+",
        "right": Object {
          "left": "b",
          "operator": "*",
          "right": "c",
        },
      },
      "operator": "/",
      "right": "d",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a + b - c 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "a",
      "operator": "+",
      "right": Object {
        "left": "b",
        "operator": "-",
        "right": "c",
      },
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a + b 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "a",
      "operator": "+",
      "right": "b",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a FROM b WHERE m = 6; 1`] = `
Object {
  "expressions": Array [
    "a",
  ],
  "from": Object {
    "table": "b",
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": Object {
    "expression": Object {
      "left": "m",
      "operator": "=",
      "right": "6",
    },
    "type": "WhereClause",
  },
}
`;

exports[`SELECT a aa 1`] = `
Object {
  "expressions": Array [
    Object {
      "alias": "aa",
      "expression": "a",
      "hasAsKeyword": false,
      "type": "AliasExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a as aa 1`] = `
Object {
  "expressions": Array [
    Object {
      "alias": "aa",
      "expression": "a",
      "hasAsKeyword": true,
      "type": "AliasExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a b c d e 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT a, b, 1`] = `
Object {
  "expressions": Array [
    "a",
    "b",
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a."select" FROM foo 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "a",
      "operator": ".",
      "right": Object {
        "type": "LiteralToken",
        "value": "select",
      },
    },
  ],
  "from": Object {
    "table": "foo",
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT a.* FROM foo 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "a",
      "operator": ".",
      "right": Object {
        "type": "WildcardExpression",
      },
    },
  ],
  "from": Object {
    "table": "foo",
    "type": "FromClause",
  },
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT by FROM foo; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT f()() 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT f(g(a)) 1`] = `
Object {
  "expressions": Array [
    Object {
      "arguments": Array [
        Object {
          "arguments": Array [
            "a",
          ],
          "callee": "g",
          "type": "CallExpression",
        },
      ],
      "callee": "f",
      "type": "CallExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT f.g() 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "f",
      "operator": ".",
      "right": Object {
        "arguments": Array [],
        "callee": "g",
        "type": "CallExpression",
      },
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT f.g.h() 1`] = `
Object {
  "expressions": Array [
    Object {
      "left": "f",
      "operator": ".",
      "right": Object {
        "left": "g",
        "operator": ".",
        "right": Object {
          "arguments": Array [],
          "callee": "h",
          "type": "CallExpression",
        },
      },
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT fn(), fn(a), fn(a, b) 1`] = `
Object {
  "expressions": Array [
    Object {
      "arguments": Array [],
      "callee": "fn",
      "type": "CallExpression",
    },
    Object {
      "arguments": Array [
        "a",
      ],
      "callee": "fn",
      "type": "CallExpression",
    },
    Object {
      "arguments": Array [
        "a",
        "b",
      ],
      "callee": "fn",
      "type": "CallExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT max () 1`] = `
Object {
  "expressions": Array [
    Object {
      "arguments": Array [],
      "callee": "max",
      "type": "CallExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT max() 1`] = `
Object {
  "expressions": Array [
    Object {
      "arguments": Array [],
      "callee": "max",
      "type": "CallExpression",
    },
  ],
  "from": undefined,
  "limit": undefined,
  "orderBy": undefined,
  "type": "SelectStatement",
  "where": undefined,
}
`;

exports[`SELECT not FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT null, true, current_timestamp FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT varchar FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SSSSS foo FROM b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting a statement.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 1 WHERE b = 2 ORDER BY c LIMIT 4 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 5 1`] = `
Object {
  "set": Object {
    "expression": Object {
      "left": "a",
      "operator": "=",
      "right": "5",
    },
    "type": "SetClause",
  },
  "table": "Foo",
  "type": "UpdateStatement",
  "where": undefined,
}
`;

exports[`UPDATE Foo SET a = 5, b = 6 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 6 as b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 6 b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET f(a) = 5 1`] = `
Object {
  "set": Object {
    "expression": Object {
      "left": Object {
        "arguments": Array [
          "a",
        ],
        "callee": "f",
        "type": "CallExpression",
      },
      "operator": "=",
      "right": "5",
    },
    "type": "SetClause",
  },
  "table": "Foo",
  "type": "UpdateStatement",
  "where": undefined,
}
`;
