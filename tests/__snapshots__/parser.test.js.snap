// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`
SELECT
  a
 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        "a",
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`ALTER TABLE tbl_name ADD COLUMN a int 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`ALTER TABLE tbl_name ADD a int 1`] = `
Object {
  "clauses": Array [
    Object {
      "after": undefined,
      "columnName": "a",
      "columnType": Object {
        "arguments": undefined,
        "name": "INT",
        "type": "DataType",
      },
      "first": false,
      "table": "tbl_name",
      "type": "AlterTableClause",
      "variant": "ADD COLUMN",
    },
  ],
  "type": "Statement",
}
`;

exports[`ALTER TABLE tbl_name ADD a int AFTER b 1`] = `
Object {
  "clauses": Array [
    Object {
      "after": "b",
      "columnName": "a",
      "columnType": Object {
        "arguments": undefined,
        "name": "INT",
        "type": "DataType",
      },
      "first": false,
      "table": "tbl_name",
      "type": "AlterTableClause",
      "variant": "ADD COLUMN",
    },
  ],
  "type": "Statement",
}
`;

exports[`ALTER TABLE tbl_name ADD a int FIRST 1`] = `
Object {
  "clauses": Array [
    Object {
      "after": undefined,
      "columnName": "a",
      "columnType": Object {
        "arguments": undefined,
        "name": "INT",
        "type": "DataType",
      },
      "first": true,
      "table": "tbl_name",
      "type": "AlterTableClause",
      "variant": "ADD COLUMN",
    },
  ],
  "type": "Statement",
}
`;

exports[`CREATE DATABASE db_name 1`] = `
Object {
  "clauses": Array [
    Object {
      "databaseName": "db_name",
      "type": "CreateDatabaseClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`CREATE DATABASE db_name 2`] = `
Object {
  "clauses": Array [
    Object {
      "databaseName": "db_name",
      "type": "CreateDatabaseClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`CREATE INDEX idx ON t1 (col1, col2) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`CREATE TABLE "Foo" ( a int ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo ( a int ) 1`] = `
Object {
  "clauses": Array [
    Object {
      "clauseName": "CREATE TABLE",
      "definitions": Array [
        Object {
          "columnName": "a",
          "columnType": Object {
            "arguments": undefined,
            "name": "INT",
            "type": "DataType",
          },
          "type": "CreateDefinition",
        },
      ],
      "tableName": "Foo",
      "type": "Clause",
    },
  ],
  "type": "Statement",
}
`;

exports[`CREATE TABLE Foo ( a int primary key ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo ( a int, b varchar(255) ) 1`] = `
Object {
  "clauses": Array [
    Object {
      "clauseName": "CREATE TABLE",
      "definitions": Array [
        Object {
          "columnName": "a",
          "columnType": Object {
            "arguments": undefined,
            "name": "INT",
            "type": "DataType",
          },
          "type": "CreateDefinition",
        },
        Object {
          "columnName": "b",
          "columnType": Object {
            "arguments": Array [
              "255",
            ],
            "name": "VARCHAR",
            "type": "DataType",
          },
          "type": "CreateDefinition",
        },
      ],
      "tableName": "Foo",
      "type": "Clause",
    },
  ],
  "type": "Statement",
}
`;

exports[`CREATE TABLE Foo ( key (id) ) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`CREATE TABLE Foo () 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid create table definition.",
  "type": undefined,
}
`;

exports[`DROP DATABASE IF EXISTS db_name 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`DROP DATABASE db_name 1`] = `
Object {
  "clauses": Array [
    Object {
      "databaseName": "db_name",
      "type": "DropDatabaseClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`DROP TABLE IF EXISTS table_name 1`] = `
Object {
  "clauses": Array [
    Object {
      "hasIfExists": true,
      "tableName": "table_name",
      "type": "DropTableClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`DROP TABLE table_name 1`] = `
Object {
  "clauses": Array [
    Object {
      "hasIfExists": false,
      "tableName": "table_name",
      "type": "DropTableClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`INSERT INTO foo (a, b) SELECT c, d FROM bar; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo (a, b) VALUES (1, 2), (3, 4); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo (a, b) VALUES (15, a * 2); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo VALUE (1), (2); 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`INSERT INTO foo VALUES (1, 2) 1`] = `
Object {
  "clauses": Array [
    Object {
      "table": "foo",
      "type": "InsertClause",
    },
    Object {
      "expressions": Array [
        Object {
          "expressions": Array [
            "1",
            "2",
          ],
          "type": "TupleExpression",
        },
      ],
      "type": "ValuesClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`INSERT foo VALUES (1, 2) 1`] = `
Object {
  "clauses": Array [
    Object {
      "table": "foo",
      "type": "InsertClause",
    },
    Object {
      "expressions": Array [
        Object {
          "expressions": Array [
            "1",
            "2",
          ],
          "type": "TupleExpression",
        },
      ],
      "type": "ValuesClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT "1", '1', \`1\` 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "type": "LiteralToken",
          "value": "1",
        },
        Object {
          "type": "LiteralToken",
          "value": "1",
        },
        Object {
          "type": "LiteralToken",
          "value": "1",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT (a) 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "expression": "a",
          "type": "ParenthesisExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT (f)() 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "arguments": Array [],
          "callee": Object {
            "expression": "f",
            "type": "ParenthesisExpression",
          },
          "type": "CallExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT * FROM "foo" 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`SELECT * FROM (SELECT * FROM foo) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Unexpected token.",
  "type": undefined,
}
`;

exports[`SELECT * FROM \`foo\`.\`goo\` 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "type": "WildcardExpression",
        },
      ],
      "type": "SelectClause",
    },
    Object {
      "table": Object {
        "left": Object {
          "type": "LiteralToken",
          "value": "foo",
        },
        "right": Object {
          "type": "LiteralToken",
          "value": "goo",
        },
        "type": "MemberExpression",
      },
      "type": "FromClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT * FROM f.g.h 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "type": "WildcardExpression",
        },
      ],
      "type": "SelectClause",
    },
    Object {
      "table": "foo",
      "type": "FromClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT * FROM foo GROUP BY a HAVING b=5 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo LEFT JOIN goo ON foo.a = goo.a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo WHERE a = (SELECT max(b) FROM foo) 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo WHERE a = (SELECT max(b) FROM foo) 2`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo f LEFT JOIN goo g ON f.a = g.a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo, goo 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT * FROM foo.goo 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "type": "WildcardExpression",
        },
      ],
      "type": "SelectClause",
    },
    Object {
      "table": Object {
        "left": "foo",
        "right": "goo",
        "type": "MemberExpression",
      },
      "type": "FromClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT 1 SELECT 2 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        "1",
      ],
      "type": "SelectClause",
    },
    Object {
      "expressions": Array [
        "2",
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT 1 UNION SELECT 2 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 1 UPDATE foo SET a = 5 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        "1",
      ],
      "type": "SelectClause",
    },
    Object {
      "table": "foo",
      "type": "UpdateClause",
    },
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": "=",
          "right": "5",
        },
      ],
      "type": "SetClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT 1; SELECT 2; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT 2 * (a % b) 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "2",
          "operator": "*",
          "right": Object {
            "expression": Object {
              "left": "a",
              "operator": "%",
              "right": "b",
            },
            "type": "ParenthesisExpression",
          },
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a "aa" 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT a + b * c / d 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": Object {
            "left": "a",
            "operator": "+",
            "right": Object {
              "left": "b",
              "operator": "*",
              "right": "c",
            },
          },
          "operator": "/",
          "right": "d",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a + b - c 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": "+",
          "right": Object {
            "left": "b",
            "operator": "-",
            "right": "c",
          },
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a + b 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": "+",
          "right": "b",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a FROM b WHERE m = 6; 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        "a",
      ],
      "type": "SelectClause",
    },
    Object {
      "table": "b",
      "type": "FromClause",
    },
    Object {
      "expression": Object {
        "left": "m",
        "operator": "=",
        "right": "6",
      },
      "type": "WhereClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a aa 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "alias": "aa",
          "expression": "a",
          "hasAsKeyword": false,
          "type": "AliasExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a as aa 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "alias": "aa",
          "expression": "a",
          "hasAsKeyword": true,
          "type": "AliasExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a b c d e 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT a, b, 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        "a",
        "b",
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a."select" FROM foo 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": ".",
          "right": Object {
            "type": "LiteralToken",
            "value": "select",
          },
        },
      ],
      "type": "SelectClause",
    },
    Object {
      "table": "foo",
      "type": "FromClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT a.* FROM foo 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": ".",
          "right": Object {
            "type": "WildcardExpression",
          },
        },
      ],
      "type": "SelectClause",
    },
    Object {
      "table": "foo",
      "type": "FromClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT by FROM foo; 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT f()() 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT f(g(a)) 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "arguments": Array [
            Object {
              "arguments": Array [
                "a",
              ],
              "callee": "g",
              "type": "CallExpression",
            },
          ],
          "callee": "f",
          "type": "CallExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT f.g() 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "f",
          "operator": ".",
          "right": Object {
            "arguments": Array [],
            "callee": "g",
            "type": "CallExpression",
          },
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT f.g.h() 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "left": "f",
          "operator": ".",
          "right": Object {
            "left": "g",
            "operator": ".",
            "right": Object {
              "arguments": Array [],
              "callee": "h",
              "type": "CallExpression",
            },
          },
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT fn(), fn(a), fn(a, b) 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "arguments": Array [],
          "callee": "fn",
          "type": "CallExpression",
        },
        Object {
          "arguments": Array [
            "a",
          ],
          "callee": "fn",
          "type": "CallExpression",
        },
        Object {
          "arguments": Array [
            "a",
            "b",
          ],
          "callee": "fn",
          "type": "CallExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT max () 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "arguments": Array [],
          "callee": "max",
          "type": "CallExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT max() 1`] = `
Object {
  "clauses": Array [
    Object {
      "expressions": Array [
        Object {
          "arguments": Array [],
          "callee": "max",
          "type": "CallExpression",
        },
      ],
      "type": "SelectClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`SELECT not FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT null, true, current_timestamp FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SELECT varchar FROM a 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`SSSSS foo FROM b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Expecting a statement.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 1 WHERE b = 2 ORDER BY c LIMIT 4 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 5 1`] = `
Object {
  "clauses": Array [
    Object {
      "table": "Foo",
      "type": "UpdateClause",
    },
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": "=",
          "right": "5",
        },
      ],
      "type": "SetClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`UPDATE Foo SET a = 5, b = 6 1`] = `
Object {
  "clauses": Array [
    Object {
      "table": "Foo",
      "type": "UpdateClause",
    },
    Object {
      "expressions": Array [
        Object {
          "left": "a",
          "operator": "=",
          "right": "5",
        },
        Object {
          "left": "b",
          "operator": "=",
          "right": "6",
        },
      ],
      "type": "SetClause",
    },
  ],
  "type": "Statement",
}
`;

exports[`UPDATE Foo SET a = 6 as b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET a = 6 b 1`] = `
Object {
  "expected": undefined,
  "index": undefined,
  "message": "Invalid syntax.",
  "type": undefined,
}
`;

exports[`UPDATE Foo SET f(a) = 5 1`] = `
Object {
  "clauses": Array [
    Object {
      "table": "Foo",
      "type": "UpdateClause",
    },
    Object {
      "expressions": Array [
        Object {
          "left": Object {
            "arguments": Array [
              "a",
            ],
            "callee": "f",
            "type": "CallExpression",
          },
          "operator": "=",
          "right": "5",
        },
      ],
      "type": "SetClause",
    },
  ],
  "type": "Statement",
}
`;
